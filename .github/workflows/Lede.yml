#
# You are pulling this repository.
#
# Because directly connect via SSH will stop Github from compiling, a separate process is needed to trigger the compilation
#
# Please use the right key.
#
# REPO_TOKEN key creation tutorial：https://git.io/jm.md
#
#

name: Lede-Openwrt
on:
  workflow_dispatch:
    inputs:
      REPO_BRANCH:
        description: 'Lede-Operwrt'
        required: true
        default: 'master'
        type: choice
        options:
          - 'master'
      CONFIG_FILE:
        description: 'Please select a config'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'armsr_rootfs_tar_gz'
          - 'asus_rt-ac42u'
          - 'd-team_newifi-d2'
          - 'p2w_r619ac-128m'
          - 'phicomm_n1'
          - 'phicomm_k2p'
          - 'phicomm_k3'
          - 'x86_32'
          - 'x86_64'
          - 'xiaoyu_xy-c5'
      INFORMATION_NOTICE:
        description: 'Telegram or pushplus notifications'
        required: true
        default: 'Off'
        type: choice
        options:
          - 'Off'
          - 'Telegram'
          - 'Pushplus'
      KEEP_WORKFLOWS:
        description: 'Clean up workflows, Keeping [X] runs that are not cleaned up.'
        required: true
        default: '50'
      KEEP_RELEASES:
        description: 'Clean up Releases,Keeping [X] Releases that are not cleaned up'
        required: true
        default: '30'
      SSH_ACTION:
        description: 'SSH'
        required: false
        default: 'false'
        type: boolean
      UPLOAD_FIRMWARE:
        description: 'Upload firmware to Github Artifacts'
        required: false
        default: 'true'
        type: boolean
      UPLOAD_RELEASE:
        description: 'Publish to Github Releases'
        required: false
        default: 'true'
        type: boolean
      CACHEWRTBUILD_SWITCH:
        description: 'Cashing up'
        required: false
        default: 'true'
        type: boolean
      UPDATE_FIRMWARE_ONLINE:
        description: 'Online upgrade/package of aarch64 img firmware'
        required: false
        default: 'true'
        type: boolean


# 如若启动定时编译的话,配置文件是设置对应文件夹内的settings.ini文件
# 定时触发开启开始编译(把下面两个#去掉开启,时间设置请看定时开启编译说明)
#  schedule:
#   - cron: 35 18 */3 * *

env:
  GIT_REPOSITORY: ${{github.repository}}
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  PUSH_PLUS_TOKEN: ${{ secrets.PUSH_PLUS_TOKEN }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TZ: Asia/Shanghai

jobs:
  build:
    name: Start"${{ matrix.target }}-${{ github.event.inputs.REPO_BRANCH }}"trigger compilation
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}
    
    env:
      FOLDER_NAME: ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: [Lede]
        
        # Please do not modify the target: [Lede] 
        
    steps:
    - name: Prepare finished
      uses: actions/checkout@v4
      
    - name: Check Key/file/version
      uses: 281677160/common@mishi

    - name: Deploy the compilation environments
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y gawk git gettext libssl-dev xsltproc zip git-core wget curl grep python2.7 python3 python3-pip libpython3-dev
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /${{ env.DIY_WORK }}
        sudo chown $USER:$GROUPS /${{ env.DIY_WORK }}
    
    - name: Download "${{ matrix.target }}-${{ inputs.REPO_BRANCH }}" source code
      working-directory: /${{ env.DIY_WORK }}
      run: |
        git clone -q -b "${REPO_BRANCH}" --single-branch "${REPO_URL}" openwrt
        ln -sf /${{ env.DIY_WORK }}/openwrt ${GITHUB_WORKSPACE}/openwrt
        bash ${{ env.COMMON_SH }} Diy_feedsconf
        echo "SHANG_CHUAN=true" >> ${GITHUB_ENV}
    
    - name: Announcement
      continue-on-error: true
      uses: 281677160/common@message
 
    - name: Connect the SSH (make menuconfig)
      id: info
      uses: 281677160/common@need
        
    - name: Compilation info
      continue-on-error: true
      if: env.COMPILATION_INFORMATION == 'true'
      uses: 281677160/common@message
    
    - name: Clean up releases and workflows
      continue-on-error: true
      uses: danshui-git/delete-releases-workflows@main
      with:
        delete_releases: true
        prerelease_option: all
        releases_keep_keyword: targz/Update
        releases_keep_latest: ${{ env.KEEP_RELEASES }}
        delete_tags: true
        max_releases_fetch: 300
        delete_workflows: true
        workflows_keep_latest: ${{ env.KEEP_WORKFLOWS }}
        max_workflows_fetch: 300
        repo: ${{ github.repository }}
        gh_token: ${{ secrets.REPO_TOKEN }}
        
    - name: Start to compile triggered by "${{ matrix.target }}"
      if: steps.info.outcome == 'success'
      uses: 281677160/common@trigger
